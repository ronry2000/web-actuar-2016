{"version":3,"sources":["../src/email-template.js"],"names":[],"mappings":"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","file":"email-template.js","sourcesContent":["import P from 'bluebird'\nimport Debug from 'debug'\nimport {basename} from 'path'\nimport juice from 'juice'\nimport {isFunction} from 'lodash'\nimport {ensureDirectory, readContents, renderFile} from './util'\n\nconst debug = Debug('email-templates:email-template')\n\nexport default class EmailTemplate {\n  constructor (path, options = {}) {\n    this.files = {}\n    this.path = path\n    this.dirname = basename(path)\n    this.options = options\n    debug('Creating Email template for path %s', basename(path))\n  }\n\n  _init () {\n    if (this.isInited) return P.resolve()\n\n    debug('Initializing templates')\n    return ensureDirectory(this.path)\n    .then(() => this._loadTemplates())\n    .then(() => {\n      this.isInited = true\n      debug('Finished initializing templates')\n    })\n  }\n\n  _loadTemplates () {\n    return P.map(['html', 'text', 'style'], (type) => {\n      return readContents(this.path, type)\n    })\n    .then((files) => {\n      let [html, text, style] = files\n\n      if (!html && !text) {\n        let err = new Error(`Neither html nor text template files found or are both empty in path ${this.dirname}`)\n        err.code = 'ENOENT'\n        throw err\n      }\n\n      if (html) {\n        debug('Found HTML file %s in %s', basename(html.filename), this.dirname)\n      }\n      this.files.html = html\n\n      if (text) {\n        debug('Found text %s file in %s', basename(text.filename), this.dirname)\n      }\n      this.files.text = text\n\n      if (style) {\n        debug('Found stylesheet %s in %s', basename(style.filename), this.dirname)\n      }\n      this.files.style = style\n\n      debug('Finished loading template')\n    })\n  }\n\n  renderText (locals, callback) {\n    debug('Rendering text')\n    return this._init()\n    .then(() => {\n      if (!this.files.text) return null\n      return renderFile(this.files.text, locals)\n    })\n    .tap(() => debug('Finished rendering text'))\n    .nodeify(callback)\n  }\n\n  renderHtml (locals, callback) {\n    debug('Rendering HTML')\n    return this._init()\n    .then(() => {\n      return P.all([\n        renderFile(this.files.html, locals),\n        this._renderStyle(locals)\n      ])\n    })\n    .then((results) => {\n      let [html, style] = results\n      if (!style) return html\n      let juiceOptions = {\n        extraCss: style\n      }\n      if (this.options.juiceOptions) {\n        debug('Using juice options ', this.options.juiceOptions)\n        juiceOptions = this.options.juiceOptions || {}\n        juiceOptions.extraCss = (this.options.juiceOptions.extraCss || '') + style\n      }\n      return juice(html, juiceOptions)\n    })\n    .tap(() => debug('Finished rendering HTML'))\n    .nodeify(callback)\n  }\n\n  render (locals, callback) {\n    if (isFunction(locals)) {\n      callback = locals\n      locals = {}\n    }\n    debug('Rendering template with locals %j', locals)\n\n    return P.all([\n      this.renderHtml(locals),\n      this.renderText(locals)\n    ])\n    .then((rendered) => {\n      let [html, text] = rendered\n      return {\n        html, text\n      }\n    })\n    .nodeify(callback)\n  }\n\n  _renderStyle (locals) {\n    return new P((resolve) => {\n      // cached\n      if (this.style !== undefined) return resolve(this.style)\n\n      // no style\n      if (!this.files.style) return resolve(null)\n\n      debug('Rendering stylesheet')\n      renderFile(this.files.style, locals)\n      .then((style) => {\n        this.style = style\n        debug('Finished rendering stylesheet')\n        resolve(style)\n      })\n    })\n  }\n}\n"]}