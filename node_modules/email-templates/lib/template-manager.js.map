{"version":3,"sources":["../src/template-manager.js"],"names":[],"mappings":"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","file":"template-manager.js","sourcesContent":["/**\n * Small utility module for compling HTML templates or pre-processed CSS.\n *\n * @author: [@jasonsims]('https://github.com/jasonsims')\n */\n\nimport {extname, dirname, basename} from 'path'\nimport cons from 'consolidate'\nimport P from 'bluebird'\nimport {isFunction} from 'lodash'\n\nvar engineMap = {\n  // HTML Template engines\n  'hbs': cons.handlebars.render,\n  'emblem': renderEmblem,\n  // CSS pre-processors\n  'less': renderLess,\n  'stylus': renderStylus,\n  'styl': renderStyl,\n  'sass': renderSass,\n  'scss': renderSass,\n  // Handle plain CSS also\n  'css': renderDefault,\n  '': renderDefault\n}\n\nexport function render (file, locals, callback) {\n  let {filename, content} = file\n\n  return new P(function (resolve, reject) {\n    if (!content) return reject(null)\n    if (!filename) return reject('Filename is null')\n    let engine = extname(filename).slice(1)\n\n    locals.filename = filename\n    locals.engine = '.' + engine\n    locals.templatePath = dirname(filename)\n\n    if (engine.length && cons[engine] !== undefined) {\n      // use consolidate.js if it supports this engine\n      return cons[engine].render(content, locals, function (err, rendered) {\n        if (err) return reject(err)\n        resolve(rendered)\n      })\n    } else {\n      // or use the function defined in the engineMap\n      return resolve(engineMap[engine](content, locals))\n    }\n    return reject(`Can't render file with extension ${engine}`)\n  })\n  .nodeify(callback)\n}\n\n// Deprecated. This engine is deprecated since v2.0\nfunction renderEmblem (source, locals) {\n  const emblem = require('emblem')\n  const handlebars = require('handlebars')\n  console.warn('Please migrate your templates to other engine. Email Templates will stop supporting emblem on the next version')\n\n  var template = emblem.compile(handlebars, source)\n  return P.resolve(template(locals))\n}\n\n// CSS pre-processors\nfunction renderLess (source, locals) {\n  const less = require('less')\n  var dir = dirname(locals.filename)\n  var base = basename(locals.filename)\n\n  return new P(function (done, reject) {\n    less.render(source, {\n      paths: [dir],\n      filename: base\n    }, function (err, output) {\n      if (err) return reject(err)\n      done(output.css || output)\n    })\n  })\n}\n\nfunction renderStylus (source, locals) {\n  const stylus = require('stylus')\n\n  // Render stylus synchronously as it does not appear to handle asynchronous\n  // calls properly when an error is generated.\n  const css = stylus.render(source, locals)\n  return P.resolve(css)\n}\n\nfunction renderStyl (source, locals) {\n  const styl = require('styl')\n\n  const css = styl(source, locals).toString()\n  return P.resolve(css)\n}\n\nfunction renderSass (source, locals) {\n  const sass = require('node-sass')\n\n  locals.data = source\n  locals.includePaths = [locals.templatePath]\n\n  return new P(function (done, reject) {\n    sass.render(locals, function (err, data) {\n      if (err) return reject(err)\n      done(data.css.toString())\n    })\n  })\n}\n\n// Default wrapper for handling standard CSS and empty source.\nfunction renderDefault (source) {\n  return P.resolve(source)\n}\n"]}